<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Ubuntu忘记root密码和登录密码解决方法</title>
    <url>/Ubuntu%E5%BF%98%E8%AE%B0root%E5%AF%86%E7%A0%81%E5%92%8C%E7%99%BB%E5%BD%95%E5%AF%86%E7%A0%81%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95.html</url>
    <content><![CDATA[<h2 id="前言："><a href="#前言：" class="headerlink" title="前言："></a>前言：</h2><p>Ubuntu忘记登录密码进行重置时，需要用到ROOT密码，若此时ROOT密码也忘记了，那就尴尬了，不过没关系，ROOT密码也有办法重置滴。如果记得ROOT密码，可以直接跳到登录密码重置段落，否则还是乖乖从头看起吧。</p>
<hr>
<a id="more"></a>    

<h2 id="一、重置ROOT密码"><a href="#一、重置ROOT密码" class="headerlink" title="一、重置ROOT密码"></a>一、重置ROOT密码</h2><p>1、在Ubuntu开机阶段按<strong>shitf键</strong>，进入这个界面后选择<strong>高级选项</strong>回车<br><img src="https://img-blog.csdnimg.cn/20200513231202333.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NzM3MTI0MA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>2、进入这个界面后<strong>不要按回车</strong>，选中这个然后按<strong>e</strong>进入编辑模式<br><img src="https://img-blog.csdnimg.cn/20200513231443115.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NzM3MTI0MA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>3、进入这里后往下找，找到画线这一行，然后把<strong>ro</strong>后面的<code>recovery nodeset</code>替换成<br><code>quiet splash rw init=/bin/bash</code>然后按F10启动<img src="https://img-blog.csdnimg.cn/2020051323170876.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NzM3MTI0MA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200513232000487.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NzM3MTI0MA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>4、进入这个界面后输入：passwd，此时系统就会提示输入新的ROOT密码，这时ROOT密码就重置成功了。<br><img src="https://img-blog.csdnimg.cn/20200513232059398.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NzM3MTI0MA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h2 id="二、重置登录密码"><a href="#二、重置登录密码" class="headerlink" title="二、重置登录密码"></a>二、重置登录密码</h2><p>1、2、步骤与重置ROOT密码相同<br>3、进入这里后同样是找到这一行，但是这次是把<code>ro</code>替换为<code>rw</code>，然后按ctrl+x启动<br><img src="https://img-blog.csdnimg.cn/20200513232501991.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NzM3MTI0MA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200513232608553.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NzM3MTI0MA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>4、进入这个页面后，选择root，即红色光标选中的那一行，回车继续后会提示输入ROOT密码，输入后进入下一步<br><img src="https://img-blog.csdnimg.cn/20200513232808198.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NzM3MTI0MA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>5、在这里输入<code>passwd xxx(xxx是你忘记登录密码的用户名）</code>，回车后提示输入新的登录密码，到这里登录密码就重置完成了<br><img src="https://img-blog.csdnimg.cn/20200513233052896.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NzM3MTI0MA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
]]></content>
      <categories>
        <category>Linux相关</category>
      </categories>
      <tags>
        <tag>Ubuntu</tag>
      </tags>
  </entry>
  <entry>
    <title>解决Oracle Linux中进入sqlplus命令行后无法使用删除键的问题</title>
    <url>/%E8%A7%A3%E5%86%B3Oracle%20Linux%E4%B8%AD%E8%BF%9B%E5%85%A5sqlplus%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%90%8E%E6%97%A0%E6%B3%95%E4%BD%BF%E7%94%A8%E5%88%A0%E9%99%A4%E9%94%AE%E7%9A%84%E9%97%AE%E9%A2%98.html</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>安装完Oracle数据库后进入sqlplus时发现删除键无法使用，所以就通过网络搜索了一下解决办法，<br>现在自己总结了一下解决方法供大家参考。</p>
<hr>
<a id="more"></a>

<ol>
<li>进入oracle linux的根目录下即<code>cd /home/oracle</code></li>
<li>用vim打开.bash_profile文件（这个是隐藏文件，用ls命令不会显示的）命令行输入<code>vi .bash_profile</code></li>
<li>在最后面加上一行<code>stty erase ^H</code>然后<code>：wq</code>保存退出</li>
<li>重新加载一下.bash_profile文件<code>source .bash_profile</code></li>
<li>关闭会话窗重新打开就会发现删除键可以用了</li>
</ol>
<blockquote>
<p>此方法只能修改删除键使其生效，对方向键无用，因为我只对删除键有需求，所以需要修改方向键的朋友请自行百度，嘿嘿</p>
</blockquote>
<p><img src="https://img-blog.csdnimg.cn/20200511211411644.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200511211445923.png" alt="在这里插入图片描述"><br>转载来自：<a href="https://blog.csdn.net/weixin_44336978/article/details/98039788?utm_medium=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-1.nonecase&depth_1-utm_source=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-1.nonecase" target="_blank" rel="noopener">linux里sqlplus下删除退格，出现^H</a></p>
]]></content>
      <categories>
        <category>Linux相关</category>
      </categories>
      <tags>
        <tag>Oracle</tag>
      </tags>
  </entry>
  <entry>
    <title>使用Hexo+github搭建自己的个人博客</title>
    <url>/%E4%BD%BF%E7%94%A8Hexo+github%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E9%9D%99%E6%80%81%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2.html</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>hexo+github建立的个人博客是一个静态的个人博客，每次的更新操作都需要在本地进行，完成后再重新部署到github上</p>
<hr>
<a id="more"></a>
<h2 id="一、步骤目录"><a href="#一、步骤目录" class="headerlink" title="一、步骤目录"></a>一、步骤目录</h2><ol>
<li>安装nodeJS(软件）</li>
<li>注册github并新建仓库（网站）</li>
<li>安装git（软件）</li>
<li>githubSSH配置</li>
<li>安装hexo并搭建本地网站</li>
<li>把本地搭建了hexo网站部署到github上</li>
</ol>
<h2 id="二、详细步骤"><a href="#二、详细步骤" class="headerlink" title="二、详细步骤"></a>二、详细步骤</h2><h3 id="安装nodeJS-软件）"><a href="#安装nodeJS-软件）" class="headerlink" title="安装nodeJS(软件）"></a>安装nodeJS(软件）</h3><p><img src="https://img-blog.csdnimg.cn/2020051012221891.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NzM3MTI0MA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><strong>介绍</strong>：Hexo是基于nodeJS环境的静态博客，里面的npm工具很有用，所以还是把这玩意儿装了。<br><strong>官方下载地址</strong>：<a href="https://nodejs.org/en/" target="_blank" rel="noopener">点击这里进入</a><br>(说明：LTS为长期支持版，Current为当前最新版，建议下载LTS版)<br>安装步骤：一路next就好了。<br><strong>验证是否安装成功</strong>：快捷键Win+R,输入cmd回车，在命令面板中输入<code>node -v</code>,若显示了版本号则安装成功<br><img src="https://img-blog.csdnimg.cn/20200510122704440.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NzM3MTI0MA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h2 id="注册github账号并新建仓库"><a href="#注册github账号并新建仓库" class="headerlink" title="注册github账号并新建仓库"></a>注册github账号并新建仓库</h2><p><strong>注册github账户</strong>：百度即可</p>
<p><strong>新建仓库</strong>：登录github,在github上创建一个仓库repository，仓库名称要写成，否则后续无法进行</p>
<blockquote>
<p>XXXX.github.io</p>
</blockquote>
<p>(XXXX)为你注册的github账户名称<br><img src="https://img-blog.csdnimg.cn/20200510123515585.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NzM3MTI0MA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200510124130396.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NzM3MTI0MA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200511081605424.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NzM3MTI0MA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>进入刚刚创建的仓库，点击setting<br><img src="https://img-blog.csdnimg.cn/20200510131332305.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NzM3MTI0MA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>下拉找到GitHub Pages,圈内的网址就是以后别人访问你博客的网址了<br><img src="https://img-blog.csdnimg.cn/20200511081348842.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NzM3MTI0MA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h2 id="安装Git"><a href="#安装Git" class="headerlink" title="安装Git"></a>安装Git</h2><p><strong>官方下载网址</strong>：<a href="https://gitforwindows.org/" target="_blank" rel="noopener">点击这里下载</a><br><strong>安装步骤</strong>：双击下载好的exe文件，一路next就好了<br><img src="https://img-blog.csdnimg.cn/20200510132334378.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NzM3MTI0MA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h2 id="githubSSH配置"><a href="#githubSSH配置" class="headerlink" title="githubSSH配置"></a>githubSSH配置</h2><p>首先选定一个文件夹作为你博客的<strong>本地仓库</strong><br>然后进入该文件夹，右键选择git bash here<br>然后输入<code>ssh-keygen -t rsa -C&quot;xxx@qq.com&quot;</code>回车<br>注意！！！””冒号中的内容要换成你注册github时填写的邮箱<br><img src="https://img-blog.csdnimg.cn/20200510133626572.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NzM3MTI0MA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>此时会提醒你输入存放SSH密匙的位置，可直接回车，会默认放在C:\Users\用户名.ssh文件夹下，也可以输入你想存放的位置<br>回车后会提示设置两次密码，不设置密码的话直接回车两次即可，建议直接两次回车<br>看到以下画面即设置成功<br><img src="https://img-blog.csdnimg.cn/20200510134226363.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NzM3MTI0MA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>打开github.com，点击右上角，选择settings<br><img src="https://img-blog.csdnimg.cn/20200510134440395.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NzM3MTI0MA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>选择SSH and GPG keys，点击new SSH Keys<br><img src="https://img-blog.csdnimg.cn/20200510134645832.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NzM3MTI0MA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>进入C:\Users\用户名.ssh文件夹下用记事本方式打开id_rsa.pub，并复制里面的内容填写到Key中，Title内可以随意填写，然后点击Add SSH key。到这里就设置好SSH了<br><img src="https://img-blog.csdnimg.cn/20200510134900628.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NzM3MTI0MA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h2 id="安装hexo并搭建本地网站"><a href="#安装hexo并搭建本地网站" class="headerlink" title="安装hexo并搭建本地网站"></a>安装hexo并搭建本地网站</h2><p><strong>在本地仓库文件夹中右键打开git bash here</strong><br>输入<code>npm install hexo-cli -g</code>回车<br><img src="https://img-blog.csdnimg.cn/20200510135538826.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NzM3MTI0MA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>接下来和上面一样，依次输入</p>
<ol>
<li><code>hexo init</code></li>
<li><code>npm install</code></li>
<li><code>hexo server</code>或者<code>hexo s</code></li>
</ol>
<p><img src="https://img-blog.csdnimg.cn/20200510140022507.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NzM3MTI0MA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>这时候你的本地网站就已经建好了，复制图片上的网址<code>http://localhost:4000</code>粘贴到浏览器就可以访问你的本地网站了</p>
<h2 id="把本地搭建了hexo网站部署到github上"><a href="#把本地搭建了hexo网站部署到github上" class="headerlink" title="把本地搭建了hexo网站部署到github上"></a>把本地搭建了hexo网站部署到github上</h2><p>打开本地仓库，对<code>_config.yml</code>文件进行编辑<br>打开文件后找到deploy<br>像下图一样配置<br>划红线的位置填入你的github账户名</p>
<p><img src="https://img-blog.csdnimg.cn/20200510140509982.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NzM3MTI0MA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>设置完后保存，然后在本地仓库打开git，输入<code>npm install hexo-deployer-git --save</code>安装插件<br>最后就是把本地网站通过git部署到github上<br>依次在git上输入一下命令</p>
<ol>
<li><code>hexo g</code></li>
<li><code>hexo d</code></li>
</ol>
<p>这时候你的本地网站就已经部署到你的github上了。通过任意浏览器输入网址<code>https://你的github账户名.github.io</code>就可以访问你的个人博客了</p>
]]></content>
      <categories>
        <category>Hexo，github</category>
      </categories>
      <tags>
        <tag>博客搭建</tag>
      </tags>
  </entry>
  <entry>
    <title>JAVA反射知识点</title>
    <url>/JAVA%E5%8F%8D%E5%B0%84%E7%9F%A5%E8%AF%86%E7%82%B9.html</url>
    <content><![CDATA[<h2 id="前言："><a href="#前言：" class="headerlink" title="前言："></a>前言：</h2><p>反射中的一些基本用法</p>
<hr>
<a id="more"></a>    

<h2 id="一、获取Class对象的三种方法"><a href="#一、获取Class对象的三种方法" class="headerlink" title="一、获取Class对象的三种方法"></a>一、获取Class对象的三种方法</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Class cls = Class.forName(<span class="string">"完整的包名"</span>);</span><br><span class="line">Class cls = 类名<span class="class">.<span class="keyword">class</span></span>;</span><br><span class="line">Class cls = 对象名.getClass;</span><br></pre></td></tr></table></figure>

<h2 id="二、获取类中的成员变量"><a href="#二、获取类中的成员变量" class="headerlink" title="二、获取类中的成员变量"></a>二、获取类中的成员变量</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Field[] f= Class对象.getFields();<span class="comment">//获取所有public修饰的成员变量</span></span><br><span class="line">Field f= Class对象.getField(<span class="string">"要获取的变量名"</span>);<span class="comment">//获取指定public变量</span></span><br><span class="line">Field[] f= Class对象.getDeclaredFields();<span class="comment">//获取包括私有的所有成员变量</span></span><br><span class="line">Field f= Class对象.getDeclaredField(<span class="string">"String name"</span>);<span class="comment">//获取指定变量包括私有变量</span></span><br></pre></td></tr></table></figure>

<p> 对获取的成员变量赋值：<br> <strong>需要注意的是</strong>:针对方法3、4在获取了私有成员变量后，必须进行“忽略访问权限修饰符的安全检查”(暴力反射)，否则在后续使用该成员变量时会报错。<br> <strong>忽略访问权限修饰符的安全检查</strong>：<code>f.setAccessible(true);</code></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">f.set(类对象名，<span class="string">"赋值的内容"</span>)</span><br><span class="line">Object o = f.get(类对象名);</span><br><span class="line">System.out.println(o);</span><br></pre></td></tr></table></figure>
<h2 id="三、获取类中的构造方法"><a href="#三、获取类中的构造方法" class="headerlink" title="三、获取类中的构造方法"></a>三、获取类中的构造方法</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Constructor[] constructor = Class对象.getConstructors();<span class="comment">//获取所有public修饰的构造方法</span></span><br><span class="line">Constructor constructor = Class对象.getConstructor(参数<span class="number">1</span>类型<span class="class">.<span class="keyword">class</span>,参数2类型.<span class="title">class</span>)</span>;<span class="comment">//获取指定public构造方法</span></span><br><span class="line">Constructor[] constructor = Class对象.getDeclaredConstructors();<span class="comment">//获取包括私有的所有构造方法</span></span><br><span class="line">Constructor constructor = Class对象.getDeclaredConstructor(参数<span class="number">1</span>类型<span class="class">.<span class="keyword">class</span>,参数2类型.<span class="title">class</span>)</span>;<span class="comment">//获取指定构造方法包括私有构造方法</span></span><br></pre></td></tr></table></figure>

<p>使用获取的构造方法new一个对象：<br> <strong>需要注意的是</strong>:针对方法3、4在获取了私有构造方法后，必须进行“忽略访问权限修饰符的安全检查”(暴力反射)，否则在后续使用该构造方法时会报错。<br> <strong>忽略访问权限修饰符的安全检查</strong>：<code>constructor.setAccessible(true);</code></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Object o3 = constructor.newInstance(构造方法参数, 构造方法参数);新建对象</span><br><span class="line">System.out.println(o3);</span><br><span class="line"><span class="comment">//一般调用空参构造是这样子的</span></span><br><span class="line">Object o3 = Class对象.newInstance();</span><br></pre></td></tr></table></figure>
<h2 id="四、获取类中的成员方法"><a href="#四、获取类中的成员方法" class="headerlink" title="四、获取类中的成员方法"></a>四、获取类中的成员方法</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Method[] me = Class对象.getMethods();<span class="comment">//获取所有public修饰的成员方法</span></span><br><span class="line">Method me = Class对象.getMethod(<span class="string">"方法名称"</span>，参数类型<span class="class">.<span class="keyword">class</span>)</span>;<span class="comment">//获取指定public成员方法</span></span><br><span class="line">Method[] me = Class对象.getDeclaredMethods();<span class="comment">//获取包括私有的所有成员方法</span></span><br><span class="line">Method me = Class对象.getDeclaredMethod(<span class="string">"方法名称"</span>，参数类型<span class="class">.<span class="keyword">class</span>)</span>;<span class="comment">//获取指定成员方法包括私有成员方法</span></span><br></pre></td></tr></table></figure>

<p> 使用获取的成员方法：</p>
<p> <strong>需要注意的是</strong>:针对方法3、4在获取了私有成员方法后，必须进行“忽略访问权限修饰符的安全检查”(暴力反射)，否则在后续使用该成员方法时会报错。<br> <strong>忽略访问权限修饰符的安全检查</strong>：<code>me.setAccessible(true);</code></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">me.invoke(调用方法的对象名，方法的参数);</span><br></pre></td></tr></table></figure>




]]></content>
      <categories>
        <category>JAVA基础</category>
      </categories>
      <tags>
        <tag>JAVA反射</tag>
      </tags>
  </entry>
</search>
